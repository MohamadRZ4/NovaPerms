<?php

declare(strict_types=1);

namespace MohamadRZ\NovaPerms;

use CortexPE\Commando\exception\HookAlreadyRegistered;
use CortexPE\Commando\PacketHooker;
use MohamadRZ\NovaPerms\commands\NPCommand;
use MohamadRZ\NovaPerms\config\ConfigManager;
use MohamadRZ\NovaPerms\model\GroupManager;
use MohamadRZ\NovaPerms\model\UserManager;
use MohamadRZ\NovaPerms\node\Types\RegexPermission;
use MohamadRZ\NovaPerms\storage\Storage;
use MohamadRZ\NovaPerms\translator\Translator;
use MohamadRZ\NovaPerms\utils\Duration;
use MohamadRZ\NovaPerms\utils\ExecuteTimer;
use pocketmine\command\Command;
use pocketmine\command\CommandSender;
use pocketmine\plugin\PluginBase;
use pocketmine\utils\SingletonTrait;
use pocketmine\utils\TextFormat as TF;

class NovaPermsPlugin extends PluginBase {
    use SingletonTrait;

    public const PREFIX = "§7[§l§bN§3P§4§r§7]§r";
    private static string $datePath;
    private static ConfigManager $configManager;
    private static Storage $storage;
    private static GroupManager $groupManager;
    private static UserManager $userManager;

    protected function onLoad(): void
    {
        self::setInstance($this);
        parent::onLoad(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws HookAlreadyRegistered
     */
    protected function onEnable(): void
    {
        $timer = new ExecuteTimer();
        parent::onEnable();
        Translator::initialize($this);
        $version = $this->getDescription()->getVersion();
        $softWareName = $this->getServer()->getName();
        $softVersion = $this->getServer()->getVersion();
        $logo = [
            "§b      __   ",
            "§b|\ | |__)  §eNovaPerms §bv$version    ",
            "§b| \| |     §8running on $softWareName - $softVersion  "
        ];
        foreach ($logo as $line) {
            $this->getLogger()->info($line);
        }

        if(!PacketHooker::isRegistered()) {
            PacketHooker::register($this);
        }

        self::$datePath = $this->getDataFolder();
        self::$configManager = new ConfigManager($this, $this->getDataFolder());
        self::$storage = new Storage($this);
        self::$groupManager = new GroupManager();
        self::$groupManager->init();
        self::$userManager = new UserManager();

        $this->getServer()->getPluginManager()->registerEvents(new EventListener(), $this);
        $this->getScheduler()->scheduleRepeatingTask(new UpdateTask(), 20 * 3);
        $this->getServer()->getCommandMap()->register("novaperms", new NPCommand($this));
        $time = $timer->end();
        $this->getLogger()->info("Successfully enabled! (took " . $time . "ms)");
    }


    public static function getInstance(): NovaPermsPlugin
    {
        return self::$instance;
    }

    public static function getDatePath(): string
    {
        return self::$datePath;
    }


    public function onCommand(CommandSender $sender, Command $command, string $label, array $args): bool
    {
        if (strtolower($command->getName()) === "novaperms") {
            $arg = array_shift($args) ?? null;
            switch ($arg) {






                case "myinfo":
                    $user = self::getUserManager()->getOrMake($sender->getName());
                    $permissions = $user->getPermissions();

                    $sender->sendMessage(TF::GOLD . str_repeat("-", 30));
                    $sender->sendMessage(TF::YELLOW . " NovaPerms " . TF::GRAY . "User Info");
                    $sender->sendMessage(TF::GOLD . str_repeat("-", 30));

                    if (empty($permissions)) {
                        $sender->sendMessage(TF::GRAY . "You have no permissions assigned.");
                    } else {
                        foreach ($permissions as $key => $node) {
                            $expiry = ($node->getExpiry() === -1)
                                ? TF::GREEN . "never"
                                : TF::RED . date("Y-m-d H:i:s", $node->getExpiry()) . TF::GRAY
                                . " (" . Duration::betweenNowAnd($node->getExpiry())->format() . " left)";

                            $sender->sendMessage(
                                TF::AQUA . " - " . TF::WHITE . $key .
                                TF::DARK_GRAY . " | " . TF::GREEN . ($node->getValue() ? "true" : "false") .
                                TF::DARK_GRAY . " | " . TF::GRAY . "expires: " . $expiry
                            );
                        }
                    }

                    $sender->sendMessage(TF::GOLD . str_repeat("-", 30));
                    return true;
                    break;
                case "addperm":
                    $time = new ExecuteTimer();
                    $user = self::getUserManager()->getOrMake($sender->getName());
                    $regexNode = 'pocketmine.*';
                    $user->addPermission(RegexPermission::builder($regexNode)->expiry(Duration::builder()->minutes(1)->build()->getSeconds())->build());
                    $time = $time->end();
                    $sender->sendMessage("OK! (took {$time}ms)");
                    break;
                default:
                    $groups = NovaPermsPlugin::getGroupManager()->getAllGroups();

                    if (count($groups) <= 1) {
                        $onlyGroup = reset($groups);
                        if (
                            $onlyGroup->getName() === GroupManager::DEFAULT_GROUP &&
                            count($onlyGroup->getOwnPermissionNodes()) === 0
                        ) {
                            $pluginName = $this->getDescription()->getName();
                            $version = $this->getDescription()->getVersion();
                            $sender->sendMessage(self::PREFIX." §2Running §b".$pluginName." v".$version."§2.");
                            $sender->sendMessage(self::PREFIX." §3Its seems that no permissions have been setup yet!");
                            $sender->sendMessage(self::PREFIX." §3Befor yoy can use any of the $pluginName commands in-game, you need to use the console to give yourself access.");
                            $sender->sendMessage(self::PREFIX." §3Open your console and run:");
                            $sender->sendMessage(self::PREFIX."  §3§l»§r §anp user {$sender->getName()} permission set novaperms.* true");
                            $sender->sendMessage(" ");
                            $sender->sendMessage(self::PREFIX." §3After you've done this, you can begin to define your permission assignments and groups.");
                            $sender->sendMessage(self::PREFIX." §3Don't know where to start? Check here:");
                            $sender->sendMessage(" §7https://github.com/MohamadRZ4/NovaPerms/wiki");
                        } else {
                            $sender->sendMessage("you dont have permission.");
                        }
                    }
                    return true;
                    break;
            }
        }
        return parent::onCommand($sender, $command, $label, $args);
    }

    /**
     * @return Storage
     */
    public static function getStorage(): Storage
    {
        return self::$storage;
    }

    /**
     * @return GroupManager
     */
    public static function getGroupManager(): GroupManager
    {
        return self::$groupManager;
    }

    /**
     * @return UserManager
     */
    public static function getUserManager(): UserManager
    {
        return self::$userManager;
    }

    /**
     * @return ConfigManager
     */
    public static function getConfigManager(): ConfigManager
    {
        return self::$configManager;
    }
}
